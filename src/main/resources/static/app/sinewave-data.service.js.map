{"version":3,"file":"sinewave-data.service.js","sourceRoot":"","sources":["sinewave-data.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,mBAA4B,SAAS,CAAC,CAAA;AACtC,qBAAyB,eAAe,CAAC,CAAA;AAGzC;IAAA;IAYA,CAAC;IAVC,gDAAkB,GAAlB,UAAmB,SAAiB,EAAE,MAAc;QAChD,IAAI,OAAO,GAAG,IAAI,kBAAa,CAAS,CAAC,CAAC,CAAC;QAC3C,IAAI,EAAE,GAAG,IAAI,SAAS,CAAC,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ,GAAG,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QACjG,KAAK,CAAC,UAAU,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;QAC3B,OAAO,CAAC,GAAG,CAAC,UAAU,GAAG,EAAE,CAAC,GAAG,CAAC,CAAA;QAChC,EAAE,CAAC,SAAS,GAAG,UAAS,CAAe;YACnC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAA;QAC/B,CAAC,CAAC;QACF,MAAM,CAAC,OAAO,CAAC;IACnB,CAAC;IAZH;QAAC,iBAAU,EAAE;;2BAAA;IAab,0BAAC;AAAD,CAAC,AAZD,IAYC;AAZY,2BAAmB,sBAY/B,CAAA","sourcesContent":["import {ReplaySubject} from 'rxjs/Rx';\nimport {Injectable} from '@angular/core';\n\n@Injectable()\nexport class SineWaveDataService {\n\n  observableSineWave(increment: number, period: number) : ReplaySubject<string> {\n      let subject = new ReplaySubject<string>(1);\n      let ws = new WebSocket('ws://' + window.location.hostname + ':' + window.location.port, 'hello');\n      alert(\"ws.url: \" + ws.url);\n      console.log(\"ws.url: \" + ws.url)\n      ws.onmessage = function(e: MessageEvent) {\n          return subject.next(e.data)\n      };\n      return subject;\n  }\n}\n"]}