{"version":3,"file":"angular-websockets-demo.component.js","sourceRoot":"","sources":["angular-websockets-demo.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAgC,eAAe,CAAC,CAAA;AAGhD,8BAAyB,iBAAiB,CAAC,CAAA;AAU3C;IAGE;QACE,0CAA0C;QAC1C,IAAI,CAAC,EAAE,GAAG,IAAI,0BAAU,CAAC,6BAA6B,CAAC,CAAC;IAC1D,CAAC;IAED,sEAA0B,GAA1B;QACE,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;QACtC,OAAO,CAAC,GAAG,CAAC,sBAAsB,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC,CAAC;QAE9D,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC,SAAS,CAC/B,UAAA,GAAG;YACD,yCAAyC;YACzC,kCAAkC;YAClC,OAAO,CAAC,GAAG,CAAC,OAAO,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC;YAChC,uBAAuB;QACzB,CAAC,EACD,UAAS,CAAC,IAAI,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EACnD,cAAa,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAC1C,CAAC;IAGJ,CAAC;IAED,yEAA6B,GAA7B;QACE,OAAO,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC;QACzC,OAAO,CAAC,GAAG,CAAC,sBAAsB,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC,CAAC;QAE9D,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IACtB,CAAC;IAED,mEAAuB,GAAvB;QACE,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;QACnC,OAAO,CAAC,GAAG,CAAC,sBAAsB,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC,CAAC;QAE9D,IAAI,IAAI,GAAG,KAAK,CAAC;QACjB,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IACjD,CAAC;IA/CH;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,6BAA6B;YACvC,SAAS,EAAE,CAAC,uCAAuC,CAAC;YACpD,SAAS,EAAE,EAAE;YACb,WAAW,EAAE,wCAAwC;YACrD,UAAU,EAAE,EAAE;SACf,CAAC;;yCAAA;IA0CF,wCAAC;AAAD,CAAC,AAzCD,IAyCC;AAzCY,yCAAiC,oCAyC7C,CAAA","sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {Input} from '@angular/core';\nimport {SineWaveDataService} from './sinewave-data.service';\nimport {$WebSocket} from './ng2-websocket';\n\n@Component({\n  moduleId: module.id,\n  selector: 'angular-websockets-demo-app',\n  styleUrls: ['angular-websockets-demo.component.css'],\n  providers: [],\n  templateUrl: 'angular-websockets-demo.component.html',\n  directives: []\n})\nexport class AngularWebsocketsDemoAppComponent {\n  ws: $WebSocket;\n\n  constructor() {\n    //TODO: Modify to inject into constructor?\n    this.ws = new $WebSocket(\"ws://localhost:8080/counter\");\n  }\n\n  handleConnectButtonClicked() {\n    console.log(\"Connect button clicked\");\n    console.log(\"ws.getReadyState(): \" + this.ws.getReadyState());\n\n    this.ws.getDataStream().subscribe(\n      res => {\n        //var count = JSON.parse(res.data).value;\n        //console.log('Got: ' + res.data);\n        console.log('Got: ' + res.data);\n        //this.counter = count;\n      },\n      function(e) { console.log('Error: ' + e.message); },\n      function() { console.log('Completed!'); }\n    );\n\n\n  }\n\n  handleDisconnectButtonClicked() {\n    console.log(\"Disconnect button clicked\");\n    console.log(\"ws.getReadyState(): \" + this.ws.getReadyState());\n\n    this.ws.close(true);\n  }\n\n  handleSendButtonClicked() {\n    console.log(\"Send button clicked\");\n    console.log(\"ws.getReadyState(): \" + this.ws.getReadyState());\n\n    let name = \"Jim\";\n    this.ws.send(JSON.stringify({ 'name': name }));\n  }\n\n}\n"]}